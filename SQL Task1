


WITH part1 AS (
SELECT
     s.date AS date,
    sp.country AS country,
    send_interval,
    is_verified,
    is_unsubscribed,
    0 AS account_cnt,
    0 AS sent_msg,
    0 AS open_msg,
    0 AS visit_msg
FROM `DA.session` s
JOIN `DA.session_params` sp
ON s.ga_session_id = sp.ga_session_id
JOIN `DA.account_session` acs
ON s.ga_session_id = acs.ga_session_id
JOIN `DA.account` a
ON acs.account_id = a.id


UNION ALL

SELECT
    DATE_ADD(s.date, INTERVAL es.sent_date DAY) AS date,
    sp.country AS country,
    0 AS send_interval,
    0 AS is_verified,
    0 AS is_unsubscribed,
    COUNT(DISTINCT a.id) AS  account_cnt,
    COUNT(DISTINCT es.id_message) AS sent_msg,
    COUNT(DISTINCT eo.id_message) AS open_msg,
    COUNT(DISTINCT ev.id_message) AS visit_msg
FROM `DA.email_sent` es
LEFT JOIN `DA.email_open` eo
ON es.id_message = eo.id_message
LEFT JOIN `DA.email_visit` ev
ON es.id_message = ev.id_message
JOIN `DA.account_session` acs
ON es.id_account = acs.account_id
JOIN `DA.session` s
ON acs.ga_session_id = s.ga_session_id
JOIN `DA.session_params` sp
ON s.ga_session_id = sp.ga_session_id
JOIN `DA.account` a
ON acs.account_id = a.id
GROUP BY date, country, send_interval, is_verified, is_unsubscribed
),

part2 AS (
SELECT
    date,
    country,
    send_interval  ,
    is_verified ,
    is_unsubscribed ,
    SUM(account_cnt) AS account_cnt,
    SUM(sent_msg) AS sent_msg,
    SUM(open_msg) AS open_msg,
    SUM(visit_msg) AS visit_msg
FROM part1
GROUP BY date, country,  send_interval  , is_verified , is_unsubscribed
),


part3 AS (
SELECT
    country,
    SUM(account_cnt) AS total_country_account_cnt,
    SUM(sent_msg) AS total_country_sent_cnt
FROM part2
GROUP BY country
),

part4 AS (
SELECT
    country,
    total_country_account_cnt,
    total_country_sent_cnt,
    dense_rank() OVER (ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt,
    dense_rank() OVER (ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt
FROM part3
),


part5 AS (

SELECT
    date,
    p2.country AS country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
    total_country_account_cnt,
    total_country_sent_cnt,
     rank_total_country_account_cnt,
     rank_total_country_sent_cnt
FROM part2 p2
JOIN part4  p4
ON p2.country = p4.country
)

SELECT *
FROM part5
WHERE rank_total_country_account_cnt <= 10 OR rank_total_country_sent_cnt <= 10
ORDER BY rank_total_country_account_cnt, rank_total_country_sent_cnt;
